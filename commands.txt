docker run --name mongo1 -p 27017:27017 mongo:4.4.23 --bind_ip_all --replSet dbrs
docker run --name mongo2 -p 27018:27017 mongo:4.4.23 --bind_ip_all --replSet dbrs
docker run --name mongo3 -p 27019:27017 mongo:4.4.23 --bind_ip_all --replSet dbrs
mongo
rsconf = {
    _id: "dbrs",
    members: [
        {
            _id: 1, 
            host: "127.0.0.1:27017",
            priority: 3
        },
        {
            _id: 2,
            host: "127.0.0.1:27018",
            priority: 2
        },
        {
            _id: 3,
            host: "127.0.0.1:27019",
            priority: 1
        }
    ]
};
rs.initiate(rsconf);
----------------------------------------------------------------
# adding mongo instance addresses to etc/hosts
- open (C:\Windows\System32\drivers\etc\hosts) as adminstrator.
- add following 3 line at the end of the file.
127.0.0.1 mongo1
127.0.0.1 mongo2
127.0.0.1 mongo3
-----------------------------------------------------------------
# creating keyfile for mongo instances
- openssl.exe rand -base64 756 > ./keyfile
- chmod.exe 400 keyfile
----------------------------------------------------------------
# creating admin user
mongo <<EOF
use admin;
db.createUser(
  {
    user: "dba",
    pwd: "123456",
    roles: [ 
      { role: "userAdminAnyDatabase", db: "admin" },
      { role: "readWriteAnyDatabase", db: "admin" } 
    ]
  }
);
EOF
----------------------------------------------------------------
#creating cluster admin
#!/bin/bash

mongo -u "dba" -p "123456" <<EOF
use admin;
db.createUser(
  {
    user: "rsAdmin",
    pwd: "123456",
    roles: [ { "role" : "clusterAdmin", "db" : "admin" } ]
  }
);
EOF
----------------------------------------------------------------